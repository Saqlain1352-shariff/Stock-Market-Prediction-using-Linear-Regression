# Stock Market Prediction using Linear Regression

This repository provides a simple implementation of stock market prediction using Linear Regression in Python. It trains a model using historical stock price data and predicts future stock prices.

## Features
- Uses Linear Regression to predict stock prices.
- Splits data into training and testing sets.
- Evaluates the model using Mean Absolute Error (MAE) and Mean Squared Error (MSE).
- Visualizes actual vs. predicted stock prices.

## Requirements
Ensure you have Python installed along with the following libraries:

```bash
pip install pandas numpy matplotlib scikit-learn
```

## Usage
Run the script to train the model and predict stock prices:

```python
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Sample data (Date and Closing Price)
data = {
    'Date': pd.date_range(start='1/1/2024', periods=10, freq='D'),
    'Close': [100, 102, 104, 103, 105, 107, 108, 110, 112, 115]
}
df = pd.DataFrame(data)
df['Date'] = df['Date'].map(pd.Timestamp.toordinal)  # Convert dates to numerical format

# Splitting data into features and target
X = df[['Date']]
y = df['Close']

# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating and training the model
model = LinearRegression()
model.fit(X_train, y_train)

# Making predictions
y_pred = model.predict(X_test)

# Evaluating the model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Absolute Error: {mae}')
print(f'Mean Squared Error: {mse}')

# Predicting future stock prices
future_dates = pd.date_range(start='1/11/2024', periods=5, freq='D')
future_dates_ordinal = future_dates.map(pd.Timestamp.toordinal).values.reshape(-1, 1)
predicted_prices = model.predict(future_dates_ordinal)

# Plotting results
plt.scatter(df['Date'], df['Close'], color='blue', label='Actual Prices')
plt.plot(df['Date'], model.predict(X), color='red', label='Regression Line')
plt.scatter(future_dates_ordinal, predicted_prices, color='green', label='Predicted Prices')
plt.xlabel('Date')
plt.ylabel('Stock Price')
plt.legend()
plt.show()
```

## Contributing
Feel free to fork the repository, make improvements, and submit a pull request!

## License
This project is open-source and available under the MIT License.
